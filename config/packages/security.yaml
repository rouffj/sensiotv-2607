security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            lazy: true
            provider: app_user_provider
            form_login:
                username_parameter: _email
            logout: ~
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_EDITOR: ~
        ROLE_ADMIN:
            - ROLE_EDITOR
        ROLE_SUPERADMIN:
            - ROLE_ADMIN
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/movie/latest, roles: [ROLE_EDITOR, ROLE_MODERATOR], allow_if: "'ROUFF' == user.getLastName()" }
        - { path: ^/login,  allow_if: "is_granted('ROLE_ADMIN') or is_anonymous()"}
